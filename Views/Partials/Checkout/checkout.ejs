<!DOCTYPE html>
<html lang="en">
<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="../../Partials/Checkout/checkout.styling.css">
    <%- include("../Navbar/navbar.ejs") %>
</head>
<body>
    <div class="d-flex justify-content-between">
        <form id="checkout-form" class="mt-3 ml-3" action="/checkout" method="POST">
            <div class="form-column">
                <div class="form-group">
                    <label for="name">Name:</label>
                    <input type="text" class="form-control" id="name" name="name" required>
                </div>
                
                <div class="form-group">
                    <label for="email">Email:</label>
                    <input type="email" class="form-control" id="email" name="email" required>
                </div>
                
                <div class="form-group">
                    <label for="phone_number">Phone Number:</label>
                    <input type="tel" class="form-control" id="phone_number" name="phone_number" required>
                </div>
                
                <div class="form-group">
                    <label for="city">City:</label>
                    <input type="text" class="form-control" id="city" name="address[city]" required>
                </div>
                
                <div class="form-group">
                    <label for="street">Street:</label>
                    <input type="text" class="form-control" id="street" name="address[street]" required>
                </div>
                
                <div class="form-group">
                    <label for="apartment">Apartment:</label>
                    <input type="number" class="form-control" id="apartment" name="address[apartment]" required>
                </div>
                
                <div class="form-group">
                    <label for="floor">Floor:</label>
                    <input type="number" class="form-control" id="floor" name="address[floor]" required>
                </div>
                
                <button id="order-button" type="submit" class="btn btn-primary">Place Order</button>
            </div>
        </form>
        <div id="cart-items-container" class="d-flex flex-column align-items-center">
            <div class="total-container"></div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.7.0.js" integrity="sha256-JlqSTELeR4TLqP0OG9dxM7yDPqX1ox/HfgiSLBj8+kM=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.js" integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm" crossorigin="anonymous"></script>
    
    <script>
        let totalSum = 0;
        const LoadCartItems = () => {
    const cart_items = JSON.parse(localStorage.getItem('cartItems')) || [];
    const cartItemsContainer = document.getElementById('cart-items-container');
    const totalContainer = document.querySelector('.total-container');

    cart_items.forEach(item => {
        const card = document.createElement('div');
        card.classList.add('card', 'mb-3');

        const cardBody = document.createElement('div');
        cardBody.classList.add('card-body');

        const itemName = document.createElement('h5');
        itemName.classList.add('card-title');
        itemName.textContent = `${item.name} x ${item.quantity}`;

        const itemPrice = document.createElement('p');
        itemPrice.classList.add('card-text');
        itemPrice.textContent = `Price: $${item.total_price.toFixed(2)}`;

        const itemAdditions = document.createElement('p');
        itemAdditions.classList.add('card-text');
        const additions = Object.keys(item.additions)
            .filter(addition => item.additions[addition])
            .join(', ');
        if (additions) {
            itemAdditions.textContent = `Additions: ${additions}`;
        }

        const itemImage = document.createElement('img');
        itemImage.src = item.image;
        itemImage.alt = 'Product Image';
        itemImage.classList.add('product-cart-image');

        cardBody.appendChild(itemImage);
        cardBody.appendChild(itemName);
        if (additions) {
            cardBody.appendChild(itemAdditions);
        }
        cardBody.appendChild(itemPrice);

        card.appendChild(cardBody);
        cartItemsContainer.appendChild(card);
        totalSum += item.total_price;
    });
    const totalElement = document.createElement('div');
    totalElement.classList.add('total-price');
    totalElement.textContent = `Total Price: $${totalSum.toFixed(2)}`;
    totalContainer.appendChild(totalElement);

}
$(document).ready(() => {
        LoadCartItems();

        $('#checkout-form').submit(async function (event) {
            event.preventDefault();
            const cart_items = JSON.parse(localStorage.getItem('cartItems')) || [];
            console.log(cart_items);

            const formData = {
                name: $('#name').val(),
                email: $('#email').val(),
                phone_number: $('#phone_number').val(),
                address: {
                    city: $('#city').val(),
                    street: $('#street').val(),
                    apartment: parseInt($('#apartment').val()),
                    floor: parseInt($('#floor').val())
                },
                products_info: cart_items.map(item => ({
                    product_name: item.name,
                    total_price: item.total_price,
                    additions: {
                        sprinkles: item.additions.sprinkles,
                        hot_chocolate: item.additions.hot_chocolate,
                        gummy_bears: item.additions.gummy_bears,
                    },
                    amount: item.quantity
                })),
                amount: totalSum
            };

            try {
                const response = await $.ajax({
                    url: '/orders', 
                    method: 'POST',
                    dataType: 'json',
                    contentType: 'application/json',
                    data: JSON.stringify(formData)
                });
                localStorage.removeItem('cartItems');
                window.location.href = '/';
            } catch (error) {
                console.error('Error creating order:', error);
            }
        });
    });
    </script>
</body>
</html>