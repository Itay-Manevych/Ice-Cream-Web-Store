<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">
  <link rel="stylesheet" type="text/css" href="../../Partials/Products/productsDisplay.styling.css">
  <%- include("../Navbar/navbar.ejs") %>
</head>
<body>
<div id="locked-div">
  
  <div id="left-align" class="container mt-4">
    <div class="row">
      <div class="col-md-12 d-flex align-items-center">
        <h1 class="ml-3 medium-margin-right">Our Products</h1>
        
        <div id="filter-dropdown" class="dropdown">
          <label class="small-margin-right" for="categoryDropdown">Category:</label>
          <button class="btn btn-secondary dropdown-toggle" type="button" id="categoryDropdown" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false" >
            All
          </button>
          <ul class="dropdown-menu" aria-labelledby="categoryDropdown">
            <li><a class="dropdown-item category-dropdown-item" data-category="All">All</a></li>
            <% categories.forEach(category => { %>
              <li><a class="dropdown-item category-dropdown-item" data-category="<%= category.name %>"><%= category.name %></a></li>
            <% }); %>
          </ul>
        </div>
        <div class="dropdown ml-auto medium-margin-left">
          <label class="small-margin-right" for="sortDropdown">Sort by:</label>
          <button class="btn btn-secondary dropdown-toggle" type="button" id="sortDropdown" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
          Default
          </button>
          <ul class="dropdown-menu" aria-labelledby="sortDropdown">
            <li><a class="dropdown-item sort-dropdown-item" data-sort="Default">Default</a></li>
            <li><a class="dropdown-item sort-dropdown-item" data-sort="Alphabetically A-Z">Alphabetically A-Z</a></li>
            <li><a class="dropdown-item sort-dropdown-item" data-sort="Alphabetically Z-A">Alphabetically Z-A</a></li>
            <li><a class="dropdown-item sort-dropdown-item" data-sort="Price Lowest - Highest">Price Lowest - Highest</a></li>
            <li><a class="dropdown-item sort-dropdown-item" data-sort="Price Highest - Lowest">Price Highest - Lowest</a></li>
          </ul>
        </div>
      </div>
    </div>
  </div>
  
  <div id="container" class="d-flex flex-wrap">
    <% products.forEach(product => { %>
      <div id="card-container" class="card card-container" onclick="openModal('<%=product._id%>')">
        <div id="image-container">
          <img id="product-image" class="card-img-top" src="<%= product.image %>" alt="Product Image">
        </div>
        <div class="card-body card-content">
          <h5 class="card-title text-ellipsis"><%= product.name %></h5>
          <p class="card-text text-ellipsis"><%= product.description %></p>
          <p class="card-text card-price">Price: $<%= product.price %></p>
        </div>
      </div>
            
      <div class="modal fade" id="productModal<%= product._id %>" tabindex="-1" aria-labelledby="productModalLabel<%= product._id %>" aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="productModalLabel<%= product._id %>"><%= product.name %></h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <img id="product-image-modal" class="modal-img" src="<%= product.image %>" alt="Product Image">
              <p><%= product.description %></p>
              
              <% if (product.allergies.lactose || product.allergies.nuts || product.allergies.soy || product.allergies.gluten || product.allergies.eggs) { %>
                <p><strong>Allergens:</strong> <%= generateAllergensString(product.allergies) %></p>
              <% } %>
  
              <% function generateAllergensString(allergies) {
                const allergens = [];
            
                if (allergies.lactose) allergens.push("Lactose");
                if (allergies.nuts) allergens.push("Nuts");
                if (allergies.soy) allergens.push("Soy");
                if (allergies.gluten) allergens.push("Gluten");
                if (allergies.eggs) allergens.push("Eggs");
            
                return allergens.join(', ');
              } %>

                <p>Select Additions:</p>
                <div>
                  <label>
                    <input type="checkbox" name="sprinkles"> Sprinkles
                  </label>
                </div>
                <div>
                  <label>
                    <input type="checkbox" name="hot_chocolate"> Hot Chocolate
                  </label>
                </div>
                <div>
                  <label>
                    <input type="checkbox" name="gummy_bears"> Gummy Bears
                  </label>
                </div>
            </div>
            <footer class="modal-footer">
              <p id="total-price-<%= product._id %>" class="total-price">Total Price: $<%= product.price %></p>
              <button class="btn btn-success" onclick="addToCart('<%= product.name %>','productModal<%= product._id %>', '<%= product._id %>')">
                Add to Cart
              </button>
              <input type="number" class="quantity" id="quantity-<%= product._id %>" name="quantity" min="1" max="15" value="1" data-product-id="<%= product._id %>" data-product-price="<%= product.price %>">
            </footer>
          </div>
        </div>
      </div>
      <% }); %>
    </div>
  </div>   
   
  <script src="https://code.jquery.com/jquery-3.7.0.js" integrity="sha256-JlqSTELeR4TLqP0OG9dxM7yDPqX1ox/HfgiSLBj8+kM=" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.js" integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm" crossorigin="anonymous"></script> 
  
<script>
    const modals = [];
    
    async function createModals() {
      await $.ajax({
        url: `/search-products`,
        method: 'GET',
        success: function(products) {
          products.forEach((product, index) => {
            const element = document.createElement("div");
            element.setAttribute("id", product._id);
            const modal = new bootstrap.Modal(element);
            modal.setAttribute("hidden", true);
            $("#container").append(modal);
            modals[index] = modal;
          })
        }
      })
    }
    await createModals();

    function updateTotalPrice(quantity, price, productId) {
      const totalPrice = quantity * price;
      document.getElementById(`total-price-${productId}`).textContent = `Total Price: $${totalPrice.toFixed(2)}`;
    }

    document.getElementById('container').addEventListener('change', function (event) {
    const target = event.target;
      if (target.classList.contains('quantity')) {
        const productId = target.dataset.productId;
        const productPrice = parseFloat(target.dataset.productPrice);
        const enteredValue = parseInt(target.value);
        handleQuantityChange(productId, productPrice, enteredValue);
      }
    });
  
    function addToCart(productName, modalId, productId) {
        const selectedAdditions = {
          sprinkles: document.querySelector(`#${modalId} [name="sprinkles"]`).checked,
          hot_chocolate: document.querySelector(`#${modalId} [name="hot_chocolate"]`).checked,
          gummy_bears: document.querySelector(`#${modalId} [name="gummy_bears"]`).checked,
        };

        const selectedQuantity = parseInt(document.querySelector(`#${modalId} [name="quantity"]`).value, 10);
        const totalPriceText = document.getElementById(`total-price-${productId}`).textContent;
        const totalPrice = parseFloat(totalPriceText.split('$')[1]);
        const cartItem = {
          name: productName,
          total_price: totalPrice ,
          additions: selectedAdditions,
          quantity: selectedQuantity,
        };

        const existingCartItems = JSON.parse(localStorage.getItem('cartItems')) || [];

        existingCartItems.push(cartItem);

        localStorage.setItem('cartItems', JSON.stringify(existingCartItems));

        closeModal(productId);
        console.log(`Added "${productName}" to cart for a total of $${totalPrice} (Quantity: ${selectedQuantity})`);
        console.log("Selected Additions:", selectedAdditions);
    }
    
    function resetModalContent(modalId, productId, productPrice) {
      const quantityInput = document.getElementById(`quantity-${productId}`);
      const totalPriceElement = document.getElementById(`total-price-${productId}`);
      const checkboxes = document.querySelectorAll(`#${modalId} [type="checkbox"]`);
      
      quantityInput.value = 1;
      totalPriceElement.textContent = `Total Price: $${productPrice}`;
      
      checkboxes.forEach(checkbox => {
        checkbox.checked = false;
      });
    }
    
    function openModal(productId) {
      console.log("hihihih");
      modals[productId - 1].show();
    }
    
    function closeModal(productId) {
      modals[productId - 1].hide();
    }

  $(document).ready(function () {
    function generateAllergensString(allergies) {
      const allergens = [];

      if (allergies.lactose) allergens.push("Lactose");
      if (allergies.nuts) allergens.push("Nuts");
      if (allergies.soy) allergens.push("Soy");
      if (allergies.gluten) allergens.push("Gluten");
      if (allergies.eggs) allergens.push("Eggs");

      return allergens.join(', ');
    }

    function generateProductCard(product) {
      return (
        `<div id="card-container" class="card" onclick="openModal('${product._id}')">
          <div id="image-container">
            <img id="product-image" class="card-img-top" src="${product.image}" alt="Product Image">
          </div>
          <div class="card-body card-content">
            <h5 class="card-title text-ellipsis">${product.name}</h5>
            <p class="card-text text-ellipsis">${product.description}</p>
            <p class="card-text card-price">Price: $${product.price}</p>
          </div>
        </div>
        <div class="modal fade" id="productModal${product._id}" tabindex="-1" aria-labelledby="productModalLabel${product._id}" aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="productModalLabel${product._id}">${product.name}</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <div class="modal-body">
                <img id="product-image-modal" class="modal-img" src="${product.image}" alt="Product Image">
                <p>${product.description}</p>
                ${generateAllergensString(product.allergies) ? 
                 `<p>Allergens: ${generateAllergensString(product.allergies)}</p>` 
                 : ''}
               
                <p>Select Additions:</p>
                <div>
                  <label>
                    <input type="checkbox" name="sprinkles"> Sprinkles
                  </label>
                </div>
                <div>
                  <label>
                    <input type="checkbox" name="hot_chocolate"> Hot Chocolate
                  </label>
                </div>
                <div>
                  <label>
                    <input type="checkbox" name="gummy_bears"> Gummy Bears
                  </label>
                </div>
              </div>
              <footer class="modal-footer">
               <p id="total-price-${product._id}" class="total-price">Total Price: $${product.price}</p>
                <button class="btn btn-success" onclick="addToCart('${product.name}', 'productModal${product._id}' , '${product._id}')">
                  Add to Cart
                </button>
                <input type="number" class="quantity" name="quantity" min="1" max="15" value="1" data-product-id="${product._id}" data-product-price="${product.price}">
              </footer>
            </div>
          </div>
        </div>`
      );
    }     
    const input = $("footer > .quantity");
    input.on("click",() => {
      console.log(input.val());
    })

    $('.category-dropdown-item').on('click', function () {
        $('.category-dropdown-item').removeClass('active');
        $(this).addClass('active');
        $('#sortDropdown').text("Default");

        const selectedCategory = $(this).data('category');
        if (selectedCategory === 'All') {
          loadAllProducts();
          $('#categoryDropdown').text('All');
        } 
        else {
          loadProductsByCategory(selectedCategory);
          $('#categoryDropdown').text(selectedCategory);
        }
    });

    $('.sort-dropdown-item').on('click', function () {
      const selectedSort = $(this).data('sort');
      let currentCategory = $('#categoryDropdown').text().trim();
      $('#sortDropdown').text(selectedSort);

      if (selectedSort === 'Alphabetically A-Z') {
          sortProductsAlphabetically('asc', currentCategory);
      } 

      else if (selectedSort === 'Alphabetically Z-A') {
          sortProductsAlphabetically('desc', currentCategory);
      } 

      else if (selectedSort === 'Price Lowest - Highest') {
          sortProductsByPrice('asc', currentCategory);
      } 

      else if (selectedSort === 'Price Highest - Lowest') {
        sortProductsByPrice('desc', currentCategory);
      }
    });

    function sortProductsAlphabetically(order, category) {
      if(category==='All')
      {
        $.ajax({
          url: `/search-products`,
          method: 'GET',
        success: function (products) {
          products.sort((a, b) => {
            if (order === 'asc') {
              return a.name.localeCompare(b.name);
            } else {
              return b.name.localeCompare(a.name);
            }
          });

          updateProductDisplay(products);
        },
        error: function (error) {
          console.error('Error loading products:', error);
        }
        });
      }
      else {
        $.ajax({
            url: `/products/category/${category}`,
            method: 'GET',
          success: function (products) {
            products.sort((a, b) => {
              if (order === 'asc') {
                return a.name.localeCompare(b.name);
              } else {
                return b.name.localeCompare(a.name);
              }
            });

            updateProductDisplay(products);
          },
          error: function (error) {
            console.error('Error loading products:', error);
          }
        });
      }
    }

    function sortProductsByPrice(order, category) {
      if(category === 'All') {
        $.ajax({
        url: `/search-products`,
        method: 'GET',
        success: function (products) {
          products.sort((a, b) => {
            if (order === 'asc') {
              return a.price - b.price;
            } else {
              return b.price - a.price;
            }
          });

          updateProductDisplay(products);
        },
        error: function (error) {
          console.error('Error loading products:', error);
        }
      });}
      else {
        $.ajax({
          url: `/products/category/${category}`,
          method: 'GET',
          success: function (products) {
            products.sort((a, b) => {
              if (order === 'asc') {
                return a.price - b.price;
              } else {
                return b.price - a.price;
              }
            });

            updateProductDisplay(products);
          },
          error: function (error) {
            console.error('Error loading products:', error);
          }
        });
      }
    }

    function updateProductDisplay(products) {
      $('#container').children().remove();
      products.forEach(product => {
        const productCard = generateProductCard(product);
        $('#container').css('margin-left', '0');
        $('#container').append(productCard);
      });
    }

    function loadProductsByCategory(category) {
      $.ajax({
        url: `/products/category/${category}`,
        method: 'GET',
        success: function (products) {
          $('#container').empty(); 
          products.forEach(product => {
            const productCard = generateProductCard(product);
            $('#container').css('margin-left', '0'); 
            $('#container').append(productCard);
          });
          console.log($("#container").children());
        },
        error: function (error) {
            $('#container').children().remove();
            $('#container').css('margin-left', '2rem');
            $('#container').append('<p>No products available in this category.</p>');
            console.error('Error loading products:', error);
          }
      });
    }
    function loadAllProducts() {
        $.ajax({
          url: `/search-products`,
          method: 'GET',
          success: function (products) {
            console.log(products);
            $('#container').empty();
            products.forEach(product => {
              const productCard = generateProductCard(product);
              $('#container').css('margin-left', '0'); 
              $('#container').append(productCard);
            });
          },
          error: function (error) {
            $('#container').children().remove();
            $('#container').css('margin-left', '2rem');
            $('#container').append('<p>No products available.</p>');
            console.error('Error loading products:', error);
          }
        });
    }
  });
</script> 
</body>
</html>