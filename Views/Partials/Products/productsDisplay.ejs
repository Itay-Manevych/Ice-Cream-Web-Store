<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">
  <link rel="stylesheet" type="text/css" href="../../Partials/Products/productsDisplay.styling.css">
</head>
<body>
<div id="locked-div">
  
  <div id="left-align" class="container mt-4">
    <div class="row">
      <div id="title-container" class="col-md-12 d-flex align-items-center">
        <h1 id="page-title" class="ml-3 medium-margin-right"><%= pageTitle %></h1>
        
        <div id="filter-dropdown" class="dropdown">
          <label class="small-margin-right category-label">Filter By:</label>
          <button class="btn category dropdown-toggle" type="button" id="categoryDropdown" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Categories
          </button>
          <div class="dropdown-menu" aria-labelledby="categoryDropdown">
            <div class="checkbox-container">
              <% categories.forEach(category => { %>
                <label class="dropdown-item">
                  <input type="checkbox" class="category-checkbox category-checkbox-input" data-category="<%= category.name %>">
                  <%= category.name %>
                </label>
              <% }); %>
            </div>
          </div>
        </div>

        <div id="allergies-filter" class="medium-margin-left">
          <label class="small-margin-right">Filter By:</label>
          <div class="dropdown">
            <button class="btn category dropdown-toggle" type="button" id="allergiesDropdown" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
              Allergens
            </button>
            <div class="dropdown-menu" aria-labelledby="allergiesDropdown">
              <label class="dropdown-item">
                <input type="checkbox" class="allergy-checkbox" data-allergy="lactose"> Lactose free
              </label>
              <label class="dropdown-item">
                <input type="checkbox" class="allergy-checkbox" data-allergy="nuts"> Nuts free
              </label>
              <label class="dropdown-item">
                <input type="checkbox" class="allergy-checkbox" data-allergy="soy"> Soy free
              </label>
              <label class="dropdown-item">
                <input type="checkbox" class="allergy-checkbox" data-allergy="gluten"> Gluten free
              </label>
              <label class="dropdown-item">
                <input type="checkbox" class="allergy-checkbox" data-allergy="eggs"> Eggs free
              </label>
            </div>
          </div>
        </div>

        <div class="dropdown medium-margin-left" >
          <label class="small-margin-right" for="sortDropdown">Sort by:</label>
          <button class="btn category dropdown-toggle" type="button" id="sortDropdown" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Default
          </button>
          <ul class="dropdown-menu" aria-labelledby="sortDropdown">
            <li><a class="dropdown-item sort-dropdown-item" data-sort="Alphabetically A-Z">Alphabetically A-Z</a></li>
            <li><a class="dropdown-item sort-dropdown-item" data-sort="Alphabetically Z-A">Alphabetically Z-A</a></li>
            <li><a class="dropdown-item sort-dropdown-item" data-sort="Price Lowest - Highest">Price Lowest - Highest</a></li>
            <li><a class="dropdown-item sort-dropdown-item" data-sort="Price Highest - Lowest">Price Highest - Lowest</a></li>
          </ul>
        </div>

        <div id="price-filter" class="medium-margin-left">
          <label class="small-margin-right" for="fromPrice">Price Range:</label>
          <input type="number" id="from-price" class="price-input" placeholder="From">
          <input type="number" id="to-price" class="price-input" placeholder="To">
          <button class="btn" id="apply-price-filter">Apply</button>
        </div>
      </div>
    </div>
  </div>
  
  <div id="container" class="d-flex flex-wrap">
    <% products.forEach(product => { %>
      <div id="card-container" style="display: block;" class="card card-container" data-categories="<%= product.categories%>" data-allergies = "<%= generateAllergensString(product.allergies) %>"  onclick="openModal('productModal<%=product._id%>', '<%=product._id%>', '<%= product.price%>')">
        <div id="image-container">
          <img id="product-image" class="card-img-top" src="<%= product.image %>" alt="Product Image">
        </div>
        <div class="card-body card-content">
          <h5 class="card-title text-ellipsis"><%= product.name %></h5>
          <p class="card-text text-ellipsis"><%= product.description %></p>
          <p class="card-text card-price">Price: $<%= product.price %></p>
        </div>
      </div>
            
      <div class="modal fade" id="productModal<%= product._id %>" tabindex="-1" aria-labelledby="productModalLabel<%= product._id %>" aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="productModalLabel<%= product._id %>"><%= product.name %></h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <img id="product-image-modal" class="modal-img" src="<%= product.image %>" alt="Product Image">
              <p class="modal-description"><%= product.description %></p>
              
              <% if (product.allergies.lactose || product.allergies.nuts || product.allergies.soy || product.allergies.gluten || product.allergies.eggs) { %>
                <p><strong>Allergens:</strong> <%= generateAllergensString(product.allergies) %></p>
              <% } %>
  
              <% function generateAllergensString(allergies) {
                const allergens = [];
            
                if (allergies.lactose) allergens.push("Lactose");
                if (allergies.nuts) allergens.push("Nuts");
                if (allergies.soy) allergens.push("Soy");
                if (allergies.gluten) allergens.push("Gluten");
                if (allergies.eggs) allergens.push("Eggs");
            
                return allergens.join(', ');
              } %>
 
                <p class="additions-div">Select Additions:</p>
                <div>
                  <label>
                    <input type="checkbox" name="sprinkles"> Sprinkles
                  </label>
                </div>
                <div>
                  <label>
                    <input type="checkbox" name="hot_chocolate"> Hot Chocolate
                  </label>
                </div>
                <div>
                  <label>
                    <input type="checkbox" name="gummy_bears"> Gummy Bears
                  </label>
                </div>
            </div>
            <footer class="modal-footer">
              <p id="total-price-<%= product._id %>" class="total-price">Total Price: $<%= product.price %></p>
              <button id="add-button" class="btn" onclick="addToCart('<%= product.name %>','productModal<%= product._id %>', '<%= product._id %>', '<%= product.image %>', '<%= product.price%>')">
                Add to Cart
              </button>
              <input type="number" class="quantity" id="quantity-<%= product._id %>" name="quantity" min="1" max="15" value="1" data-product-id="<%= product._id %>" data-product-price="<%= product.price %>">
            </footer>
          </div>
        </div>
      </div>
      <% }); %>
    </div>
  </div>   

  <script src="https://code.jquery.com/jquery-3.7.0.js" integrity="sha256-JlqSTELeR4TLqP0OG9dxM7yDPqX1ox/HfgiSLBj8+kM=" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.js" integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm" crossorigin="anonymous"></script> 
  
<script>
  let counter = parseInt(localStorage.getItem('counter')) || 1;
  const modals = {};
 
    function updateTotalPrice(quantity, price, productId) {
      const totalPrice = quantity * price;
      document.getElementById(`total-price-${productId}`).textContent = `Total Price: $${totalPrice.toFixed(2)}`;
    }
    document.getElementById('container').addEventListener('change', function (event) {
    const target = event.target;
      if (target.classList.contains('quantity')) {
        const productId = target.dataset.productId;
        const productPrice = parseFloat(target.dataset.productPrice);
        const enteredValue = parseInt(target.value);
        handleQuantityChange(productId, productPrice, enteredValue);
      }
    });
 
  function handleQuantityChange(productId,productPrice) {
    const quantityInput = document.getElementById(`quantity-${productId}`);
    let enteredValue = parseInt(quantityInput.value);
 
    if (enteredValue > 15) {
      quantityInput.value = 15;
    }
 
    if(isNaN(enteredValue) || enteredValue<1) {
      quantityInput.value = 1;
    }
 
    enteredValue = parseInt(quantityInput.value);
    updateTotalPrice(enteredValue, productPrice, productId);
  }
  
  function addToCart(productName, modalId, productId, productImage, productPrice) {
      const selectedAdditions = {
        sprinkles: document.querySelector(`#${modalId} [name="sprinkles"]`).checked,
        hot_chocolate: document.querySelector(`#${modalId} [name="hot_chocolate"]`).checked,
        gummy_bears: document.querySelector(`#${modalId} [name="gummy_bears"]`).checked,
      };
    
      const selectedQuantity = parseInt(document.querySelector(`#${modalId} [name="quantity"]`).value, 10);
      const totalPriceText = document.getElementById(`total-price-${productId}`).textContent;
      const totalPrice = parseFloat(totalPriceText.split('$')[1]);
      const cartItem = {
        id: counter++,
        name: productName,
        price: parseFloat(productPrice),
        total_price: totalPrice,
        additions: selectedAdditions,
        quantity: selectedQuantity,
        image: productImage
      };
    
      const existingCartItems = JSON.parse(localStorage.getItem('cartItems')) || [];
    
      existingCartItems.push(cartItem);
    
      localStorage.setItem('cartItems', JSON.stringify(existingCartItems));
    
      localStorage.setItem('counter', counter);
    
      const addedToCartMessage = document.createElement('div');
      addedToCartMessage.textContent = 'Added to Cart!';
      addedToCartMessage.classList.add('added-to-cart-message', 'text-success');
      document.body.appendChild(addedToCartMessage);
    
      const overlay = document.createElement('div');
      overlay.classList.add('modal-overlay');
      document.body.appendChild(overlay);
    
      setTimeout(() => {
        closeModal(modalId);
        document.body.removeChild(addedToCartMessage);
        document.body.removeChild(overlay);
      }, 1000);
    }   

        function resetModalContent(modalId, productId, productPrice) {
          const quantityInput = document.getElementById(`quantity-${productId}`);
          const totalPriceElement = document.getElementById(`total-price-${productId}`);
          const checkboxes = document.querySelectorAll(`#${modalId} [type="checkbox"]`);

          quantityInput.value = 1;
          totalPriceElement.textContent = `Total Price: $${productPrice}`;

          checkboxes.forEach(checkbox => {
            checkbox.checked = false;
          });
        }
      
        function openModal(modalId, productId, productPrice) {
          if (!modals[modalId]) {
            modals[modalId] = new bootstrap.Modal(document.getElementById(modalId));

            document.getElementById(modalId).addEventListener('hidden.bs.modal', function () {
              resetModalContent(modalId, productId, productPrice);
            });
          }
          modals[modalId].show();
        }

        function closeModal(modalId) {
          if (modals[modalId]) {
            modals[modalId].hide();
          }
    }
 
  $(document).ready(function() {
    
    const selectedCategories = new Set();
    const selectedAllergies = new Set();
    $('#apply-price-filter').on('click', function () {
      filterProducts();
    });

    $('.category-checkbox').on('click', function() {
      const category = $(this).data('category');
      if ($(this).prop('checked')) {
        selectedCategories.add(`'${category}',`);
      } else {
        selectedCategories.delete(`'${category}',`);
      }

      filterProducts();
    });

    $('.allergy-checkbox').on('click', function () {
      const allergy = $(this).data('allergy');
      if ($(this).prop('checked')) {
        selectedAllergies.add(allergy);
      } else {
        selectedAllergies.delete(allergy);
      }

      filterProducts();
  });

  function filterProducts() {
    const products = $('.card-container').toArray();
    const fromPrice = parseFloat($('#from-price').val()) || 0;
    const toPrice = parseFloat($('#to-price').val()) || Infinity;
    if (selectedCategories.size === 0 && selectedAllergies.size === 0) {
      products.forEach(product => {
        const productPrice = parseFloat($(product).find('.card-price').text().replace(/[^0-9.-]+/g, ''));
        const showPrice = productPrice >= fromPrice && productPrice <= toPrice;
        $(product).css('display', showPrice ? 'block' : 'none');
      });
    } else {
      products.forEach(product => {
        const productCategories = $(product).attr('data-categories').split(' ');
        const productPrice = parseFloat($(product).find('.card-price').text().replace(/[^0-9.-]+/g, ''));
        const productAllergies = $(product).attr('data-allergies').split(', ').map(allergy => allergy.toLowerCase());
        console.log(productAllergies)
        let showCatgeory;
        if(selectedCategories.size === 0) {
          showCatgeory = true;
        }
        else{
          showCatgeory = productCategories.some(category => selectedCategories.has(category));
        }
        const showPrice = productPrice >= fromPrice && productPrice <= toPrice;
        const hideExcludedAllergens = productAllergies.some(allergy => selectedAllergies.has(allergy));
        $(product).css('display', showCatgeory && showPrice && !hideExcludedAllergens ? 'block' : 'none');
      });
    }
  }
 
    $('.sort-dropdown-item').on('click', function () {
      const selectedSort = $(this).data('sort');
      let currentCategory = $('#categoryDropdown').text().trim();
      $('#sortDropdown').text(selectedSort);
 
      if (selectedSort === 'Alphabetically A-Z') {
          sortProductsAlphabetically('asc');
      } 
 
      else if (selectedSort === 'Alphabetically Z-A') {
          sortProductsAlphabetically('desc');
      } 
 
      else if (selectedSort === 'Price Lowest - Highest') {
          sortProductsByPrice('asc');
      } 
 
      else if (selectedSort === 'Price Highest - Lowest') {
        sortProductsByPrice('desc');
      }
    });
 
    function sortProductsAlphabetically(order) {
      const products = $('.card-container').toArray();
        
      products.sort((a, b) => {
        const nameA = $(a).find('.card-title').text().trim();
        const nameB = $(b).find('.card-title').text().trim();
      
        if (order === 'asc') {
          return nameA.localeCompare(nameB);
        } else {
          return nameB.localeCompare(nameA);
        }
      });
      const container = $('#container');
      const detachedProducts = products.map(product => $(product).detach());
    
      container.append(detachedProducts);
}

function sortProductsByPrice(order) {
  const products = $('.card-container').toArray();

  products.sort((a, b) => {
    const priceA = parseFloat($(a).find('.card-price').text().replace(/[^0-9.-]+/g, ''));
    const priceB = parseFloat($(b).find('.card-price').text().replace(/[^0-9.-]+/g, ''));

    if (order === 'asc') {
      return priceA - priceB;
    } else {
      return priceB - priceA;
    }
  });

  const container = $('#container');
  const detachedProducts = products.map(product => $(product).detach());

  container.append(detachedProducts);
}
  });
</script> 
</body>
</html>