<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="stylesheet" type="text/css" href="../../Partials/Navbar/navbar.styling.css">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    </head>

    <body class="body">
        <div class="cart-overlay" style="display: none;"></div>
        <div id="cart-container" class="cart-container" style="display: none;">
            <div id="close-cart" class="bi bi-x-lg h3 d-flex align-items-center justify-content-center" style="position: absolute; top: 1rem; right: 1rem; cursor: pointer;"></div>
        </div>
        
        <div style="height: 8rem;" class="bg-light"></div>

        <nav class="navbar bg-light align-items-center"> 
            <div class="us-box d-flex bg-light align-items-center">
                <img id="logo-btn" class="nav-item" src="../../Assets/logo.png" alt="Logo">
                <button id="home-btn" class="nav-item">HOME</button>
                <button id="about-btn" class="nav-item">ABOUT US</button>
                <button id="shop-btn" class="nav-item">SHOP</button>
                <button id="reviews-btn" class="nav-item">REVIEWS</button>
            </div>
            <div class="user-box d-flex bg-light align-items-center justify-content-center">
                <i id="search-icon" class="bi bi-search h3 d-flex align-items-center justify-content-center"></i>
                <i id="user-icon" class="bi bi-person-square h3 d-flex align-items-center justify-content-center"></i>
                <div class="position-relative">
                    <i id="cart-icon" class="bi bi-cart h3 d-flex align-items-center justify-content-center"></i>
                    <span id="cart-badge"class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                        0
                    <span class="visually-hidden">unread messages</span>
                    </div>
            </div>
        </nav>

        <div id="search-box" class="bg-light">
            <i id="close-search" class="bi bi-x-lg h3 d-flex align-items-center justify-content-center"></i>
            <div class="ui-widget">
                <input id="search-input" placeholder="Search">
                <div id="search-results"></div>
            </div>    
            <i id="search-icon-search-box" class="bi bi-search h3 d-flex align-items-center justify-content-center"></i>
        </div>

        <script src="https://code.jquery.com/jquery-3.7.0.js" integrity="sha256-JlqSTELeR4TLqP0OG9dxM7yDPqX1ox/HfgiSLBj8+kM=" crossorigin="anonymous"></script>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm" crossorigin="anonymous"></script> 

        <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>

        <script>
            let current_user;
            $(document).ready(() => {
                navbar = $(".navbar")[0];
                
                const logo_btn = $("#logo-btn")[0];
                const about_btn = $("#about-btn")[0];
                const shop_btn = $("#shop-btn")[0];
                const home_btn = $("#home-btn")[0];
                const reviews_btn = $("#reviews-btn")[0];
                
                const open_search = $(".bi-search")[0];
                const user_btn = $(".bi-person-square")[0];
                const cart_btn = $(".bi-cart")[0];
                
                const search_box = $("#search-box")[0];
                const close_search = $("#close-search")[0];
                const search_input = $("#search-input")[0];
                
                const search_btn = $("#search-icon-search-box")[0];
                
                if (window.location.pathname === '/checkout') {
                    $('#cart-icon').remove();
                    $('#cart-badge').remove();
                    $('.user-box').css('gap', '6rem');
                }
                const mainPage = () => {
                    window.location.href = "/";
                }

                const aboutPage = () => {
                    window.location.href = "/about_us";
                }

                const shop = () => {
                    window.location.href = "/products";
                }

                const home = () => {
                    window.location.href = "/";
                }

                const reviews = () => {
                    window.location.href = "/reviews";
                }

                const closeSearch = () => {
                    navbar.style.display = "flex";
                    search_box.style.display = "none";
                    search_input.value = ""; 
                    $('#search-results').hide(); 
                }

                const openSearch = () => {
                    navbar.style.display = "none";
                    search_box.style.display = "flex";
                    search_box.style.height = "0";
                    search_box.style.justifyContent = "center";
                    search_box.style.alignItems = "center";
                    search_input.focus();

                    setTimeout(() => {
                        search_box.style.height = "8rem";
                    }, 10)
                
                    close_search.onclick = closeSearch;

                    const clicked = (id) => {
                        if(id!=-1) {
                        window.location.href = `/products/id/${id}`;
                        closeSearch();}
                    }

                    let items_arr = [], ids = [], current = 0, items_num = 0
                    
                    
                    $(search_input).on('keydown', (event) => {
                        if(event.key === "Backspace" || event.key === "Delete") {
                            if($(search_input).val().length === 1) {
                                $(search_input).val('');
                                $('#search-results').hide();
                                $('#search-results').empty();
                                current = 0;
                                items_num = 0; 
                            }
                        }
                        else if (event.key == "Enter" && items_num != 0){
                            clicked(ids[current]);
                        } 
                        else if (event.key == "ArrowUp"){
                            event.preventDefault();
                            if(current > 0){
                                items_arr[current].style.background = "whitesmoke";
                                current--;
                                items_arr[current].style.background = "rgb(205, 203, 203)";
                            }
                        } 
                        else if (event.key === "ArrowDown"){
                            event.preventDefault();
                            if(current + 1 < items_num){
                                items_arr[current].style.background = "whitesmoke";
                                current++;
                                items_arr[current].style.background = "rgb(205, 203, 203)";
                            }
                        }
                    })

                    $(search_input).on('input', (event) => {
                        let max_products = 4;
                        
                        $.ajax({
                            url: `/search-products`,
                            method: 'GET',
                            success: (products) => {
                                current = 0;
                                items_num = 0;

                                $('#search-results').empty();

                                if($(search_input).val().trim() !== '')
                                    $('#search-results').show();
                            
                                for(let i = 0; i < 4; i++)
                                    if(items_arr[i])
                                        items_arr[i] = null;
                            
                                products.forEach(product => {
                                    if (items_num < max_products && product.name.toLowerCase().includes(search_input.value.toLowerCase())) {
                                        let new_item = document.createElement('div');
                                        new_item.innerHTML = `
                                            <div id="item" class="d-flex align-items-center justify-content-center">
                                                <div style="width:18.5rem;"><h5 class="card-title text-ellipsis" style="margin-left: 1rem; margin-right: rem;">${product.name}</h5></div>
                                                <div style="width:10rem; margin-left: 1rem; margin-right: 1rem;" class="d-flex justify-content-center"><h5 class="card-title text-ellipsis">Price: $${product.price}</h5></div>
                                                <img id="image" src="${product.image}" alt="Product Image" style="width: 4rem; height: 4rem; margin-right: 1rem;">
                                            </div>`;
                                        
                                        new_item.addEventListener('click', () => clicked(product._id));

                                        ids[items_num] = product._id;
                                        items_arr[items_num] = new_item;
                                        
                                        $('#search-results').append(items_arr[items_num]); 

                                        if (items_num == 0)
                                            items_arr[items_num].style.background = "rgb(205, 203, 203)";
                                        else 
                                            items_arr[items_num].style.background = "whitesmoke";
                                        
                                        items_num++;
                                    }
                                });
                            },
                        
                            error: (error) => {
                              console.error('Error loading products:', error);
                            },

                        });
                    })

                    search_btn.addEventListener('click', () => {
                        if(items_num != 0 && search_input.value != '')
                           clicked(ids[current]);
                    })
                }

                const user = () => {
                    const jwt = document.cookie.slice(4);
                    if(jwt) {
                        window.location.href = "/dashboard";
                    }
                    else {
                        window.location.href = "/login";
                    }
                }

                const closeCart = () => {
                    const cart_container = $('#cart-container');
                    const cart_overlay = $('.cart-overlay');

                    cart_container.hide();
                    cart_overlay.hide();
                };

                const cart_overlay = $('.cart-overlay');
                cart_overlay.on('click', closeCart);
                
                const cart = () => {
                    const cart_container = $('#cart-container');
                    const cart_overlay = $('.cart-overlay');
                    cart_container.empty();

                    if (cart_container.css('display') === 'none') {
                        cart_container.css('display', 'block');
                        cart_overlay.css('display', 'block');
                    
                        const cart_button = $('<div>').addClass('bi bi-x-lg h3 d-flex align-items-center justify-content-center');
                        cart_button.css({
                            position: 'absolute',
                            top: '1rem',
                            right: '1rem',
                            cursor: 'pointer'
                        });
                        cart_button.on('click', closeCart);
                        cart_container.append(cart_button);
                    
                        populateCart();
                    }
                };

                const updateCartItemQuantity = (cart_id, new_quantity) => {
                    const cart_items = JSON.parse(localStorage.getItem('cartItems')) || [];
                
                    const updated_cart_items = cart_items.map(item => {
                        if (item.id === cart_id) {
                            item.quantity = new_quantity;
                            item.total_price = item.price * new_quantity;
                        }
                        return item;
                    });
                
                    const filteredcart_items = updated_cart_items.filter(item => item.quantity > 0);
                
                    localStorage.setItem('cartItems', JSON.stringify(filteredcart_items));
                };
                const getUser = async () => {
                    try {
                        await $.ajax({
                            url: '/dashboard/user', 
                            type: 'GET',
                            success: (data) => {
                                current_user = data;
                            },
                            error: (error) => {
                                current_user = undefined;
                                console.log("Error fetching existing user", error);
                            }
                        });
                    }
                    catch(error){
                        current_user = undefined;
                    }
            }

            const updateCartBadge = () => {
                const cartItems = JSON.parse(localStorage.getItem('cartItems')) || [];
                const cartBadge = document.getElementById('cart-badge');

                if (cartBadge) {
                    const totalQuantity = cartItems.reduce((total, item) => total + item.quantity, 0);
                    cartBadge.textContent = totalQuantity;
                }
             }
             updateCartBadge();
             
                const populateCart = () => {
                    const cart_container = $('#cart-container');
                    const cart_content = $('<div>').addClass('cart-content');
                    
                    cart_content.empty();
                    
                    const cart_items = JSON.parse(localStorage.getItem('cartItems')) || [];

                    if (cart_items.length === 0) {
                        const empty_cart_message = $('<p>').addClass('empty-cart-message').text('No products added to cart.');
                        cart_content.append(empty_cart_message);
                    }

                    if(cart_items.length > 0) {

                        const header_and_error = $('<div>').attr('id', 'header-and-error');
                        const header_div = $('<div>').attr('id', 'header-div');
                            
                            header_and_error.append(header_div);
                            let total_price = cart_items.reduce((total, item) => total + item.total_price, 0);
                            const total_element = $('<p>').attr('id', "total-price-element").text(`Total Price: $${total_price.toFixed(2)}`);
                                header_div.append(total_element);
                                
                                const checkout_button = $('<button>').text('Checkout').addClass('btn checkout-button');
                                    checkout_button.on('click', async function () 
                                    {
                                        await getUser();
                                        const errorExists = $('#invalid-feedback').length > 0;
                                        if(!current_user && !errorExists) {
                                            const error = $('<div>').attr('id', "invalid-feedback").addClass('text-danger').text('You must login before checkout');
                                                header_and_error.append(error);
                                            }
                                            if(current_user) {
                                                window.location.href = "/checkout";
                                            }
                                        });
                                        header_div.append(checkout_button);
                                        
                                        cart_content.append(header_and_error);
                                    
                                    cart_items.forEach((item, index) => {
                                        const cart_item = $('<div>').addClass('cart-item');
                                        
                                        const item_image = $('<img>').attr('src', item.image).attr('alt', 'Product Image').attr('id', 'product-cart-image');
                                        cart_item.append(item_image);
                                        
                                        const item_details = $('<div>').addClass('item-details');
                                        const details_container = $('<div>').addClass('details_container');
                                    
                                        const item_name = $('<p>').text(item.name).addClass('item-name');
                                        details_container.append(item_name);
                                        
                                        const item_price = $('<p>').text(`$${item.total_price.toFixed(2)}`);
                                            
                                            const quantity_input = $('<input>').attr('type', 'number').attr('min', '0').attr("id", "quantity-input").val(item.quantity);
                                            details_container.append(quantity_input);
                                            item_details.append(details_container);

                                            const delete_icon = $('<i>').addClass('bi bi-x-lg delete-icon');
                                                delete_icon.on('click', () => {
                                                    quantity_input.val(0);
                                                    quantity_input.trigger('change');
                                                })
                                                
                                                quantity_input.on('change', event => {
                                                    
                                                    let new_quantity = parseInt(event.target.value);
                                                    if (isNaN(new_quantity) || new_quantity < 0) {
                                                        new_quantity = 0;
                                                    } 
                                                    else if (new_quantity > 15) {
                                                        new_quantity = 15;
                                                    }
                                                    
                                                    quantity_input.val(new_quantity);
                                                    
                                                    item_price.text(`$${(item.price * new_quantity).toFixed(2)}`);
                                                    
                                                    if (event.target.value === "0") {
                                                        cart_item.addClass('hidden');
                                                    }
                                                    
                                                    updateCartItemQuantity(item.id, new_quantity);
                                                    const updated_cart_items = JSON.parse(localStorage.getItem('cartItems')) || [];
                                                    total_price = updated_cart_items.reduce((total, item) => total + item.total_price, 0);
                                                    const updated_total_element = $('#total-price-element');
                                                    updated_total_element.text(`Total Price: $${total_price.toFixed(2)}`);
                                                    total_element.replaceWith(updated_total_element);
                                                    if(updated_cart_items.length === 0) {
                                                        $('#total-price-element').remove();
                                                        $('.checkout-button').remove();
                                                        const empty_cart_message = $('<p>').addClass('empty-cart-message').text('No products added to cart.');
                                                            cart_content.append(empty_cart_message);
                                                        }
                                                        updateCartBadge();
                                                    });
                                                    
                                                    details_container.append(quantity_input);
                                                    details_container.append(delete_icon);
                                            
                                            const selected_additions = item.additions;
                                            const addition_names = [];

                                            if (selected_additions.sprinkles) {
                                                addition_names.push('Sprinkles');
                                            }
                                            
                                            if (selected_additions.hot_chocolate) {
                                                addition_names.push('Hot Chocolate');
                                            }
                                            
                                            if (selected_additions.gummy_bears) {
                                                addition_names.push('Gummy Bears');
                                            }
                                            
                                            if (addition_names.length > 0) {
                                                const addition_element = $('<p>').text(addition_names.join(', '));
                                                    item_details.append(addition_element);
                                                }
                                                
                                                item_details.append(item_price);
                                                cart_item.append(item_details);
                                                
                                                cart_content.append(cart_item);
                                            });
                                            
                                        }
                                        cart_container.append(cart_content);
                };

                logo_btn.onclick = mainPage;
                about_btn.onclick = aboutPage;
                open_search.onclick = openSearch;
                shop_btn.onclick = shop;
                home_btn.onclick = home;
                user_btn.onclick = user;
                cart_btn.onclick = cart;
                reviews_btn.onclick = reviews;
            }); 
        </script>
    </body>
</html>